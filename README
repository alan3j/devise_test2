Commit: test2 initial commit
This is a from scratch build from the Devise, RSpec, Cucumber tutorial:
  http://railsapps.github.com/tutorial-rails-devise-rspec-cucumber.html#create-the-application

  rails new test2 --database=postgresql -T

  Add Ubuntu user test2 w/ password test2

  Modified pg_hba.conf
    /etc/postgresql/9.2/main/pg_hba.conf
      local   all     all     trust

  Restart postgresql

  Add test2 role using pgadmin3
    pgadmin3
      New login role
      Grant create databases

  Check config/database.yml and test2 user was already configured 

  Modify Gemfile; add
    gem 'therubyracer'
    gem 'execjs'

  rake db:create

  Modify Gemfile; add
    gem "rspec-rails", ">= 2.12.2", :group => [:development, :test]
    gem "database_cleaner", ">= 0.9.1", :group => :test
    gem "email_spec", ">= 1.4.0", :group => :test
    gem "cucumber-rails", ">= 1.3.0", :group => :test, :require => false
    gem "launchy", ">= 2.1.2", :group => :test
    gem "capybara", ">= 2.0.2", :group => :test
    gem "factory_girl_rails", ">= 4.2.0", :group => [:development, :test]
    gem "devise", ">= 2.2.3"
    gem "quiet_assets", ">= 1.0.1", :group => :development
    gem "figaro", ">= 0.5.3"
    gem "better_errors", ">= 0.3.2", :group => :development
    gem "binding_of_caller", ">= 0.6.8", :group => :development

  bundle install

  dev01@dev01:~/dev/test2$ gem list 

  *** LOCAL GEMS ***

  actionmailer (3.2.12, 3.2.9)
  actionpack (3.2.12, 3.2.9)
  activemodel (3.2.12, 3.2.9)
  activerecord (3.2.12, 3.2.9)
  activeresource (3.2.12, 3.2.9)
  activesupport (3.2.12, 3.2.9)
  addressable (2.3.3, 2.3.2)
  archive-tar-minitar (0.5.2)
  arel (3.0.2)
  awesome_print (1.1.0)
  bcrypt-ruby (3.0.1)
  better_errors (0.7.2)
  bigdecimal (1.1.0)
  binding_of_caller (0.7.1)
  builder (3.1.4, 3.0.4)
  bundler (1.2.4, 1.2.3)
  capistrano (2.14.2)
  capybara (2.0.2, 2.0.1)
  childprocess (0.3.9, 0.3.8, 0.3.6)
  code_analyzer (0.3.1)
  coderay (1.0.9)
  coffee-rails (3.2.2)
  coffee-script (2.2.0)
  coffee-script-source (1.6.1, 1.4.0)
  colored (1.2)
  columnize (0.3.6)
  cucumber (1.2.3, 1.2.1)
  cucumber-rails (1.3.1)
  database_cleaner (0.9.1)
  debug_inspector (0.0.2)
  deepopenstruct (0.1.2)
  devise (2.2.3)
  diff-lcs (1.2.1, 1.1.3)
  email_spec (1.4.0)
  erubis (2.7.0)
  excon (0.16.10)
  execjs (1.4.0)
  factory_girl (4.2.0, 4.1.0)
  factory_girl_rails (4.2.1)
  ffi (1.4.0, 1.2.0)
  figaro (0.6.3)
  flay (2.1.0, 2.0.1)
  flog (3.2.2, 3.2.1)
  gherkin (2.11.6, 2.11.5)
  haml (4.0.0, 3.1.7)
  heroku (2.35.0, 2.33.5)
  heroku-api (0.3.7)
  highline (1.6.15)
  hike (1.2.1)
  i18n (0.6.4, 0.6.1)
  innertube (1.0.2)
  io-console (0.4.1, 0.3)
  journey (1.0.4)
  jquery-rails (2.2.1, 2.1.4)
  json (1.7.7, 1.7.5, 1.5.4)
  launchy (2.2.0, 2.1.2)
  libv8 (3.11.8.13 x86-linux, 3.11.8.4)
  libwebsocket (0.1.7.1)
  linecache19 (0.5.12)
  mail (2.5.3, 2.4.4)
  middleware (0.1.0)
  mime-types (1.21, 1.19)
  minitest (4.6.1, 2.5.1)
  multi_json (1.7.1, 1.6.1, 1.5.0)
  net-scp (1.1.0)
  net-sftp (2.1.1)
  net-ssh (2.6.5)
  net-ssh-gateway (1.2.0)
  netrc (0.7.7)
  nokogiri (1.5.7, 1.5.6)
  orm_adapter (0.4.0)
  pg (0.14.1)
  polyglot (0.3.3)
  progressbar (0.20.0, 0.12.0)
  quiet_assets (1.0.2)
  rack (1.4.5, 1.4.1)
  rack-cache (1.2)
  rack-protection (1.3.2)
  rack-ssl (1.3.3, 1.3.2)
  rack-test (0.6.2)
  rails (3.2.12, 3.2.9)
  rails_best_practices (1.13.4, 1.13.2)
  railties (3.2.12, 3.2.9)
  rake (10.0.3, 0.9.2.2)
  rdoc (3.12.2, 3.12.1, 3.12, 3.9.4)
  RedCloth (4.2.9)
  reek (1.3.1, 1.2.13)
  ref (1.0.2)
  rest-client (1.6.7)
  riddle (1.5.4, 1.5.3)
  ripper_ruby_parser (0.0.8)
  rspec-core (2.13.1, 2.12.2)
  rspec-expectations (2.13.0, 2.12.1)
  rspec-mocks (2.13.0, 2.12.2, 2.12.1)
  rspec-rails (2.13.0, 2.12.2, 2.12.0)
  ruby-debug-base19 (0.11.25)
  ruby-debug19 (0.11.6)
  ruby-progressbar (1.0.2)
  ruby-tmdb (0.2.1)
  ruby2ruby (2.0.3, 1.2.5)
  ruby_core_source (0.1.5)
  ruby_parser (3.1.1, 2.3.1)
  rubygems-update (1.8.25)
  rubyzip (0.9.9)
  sass (3.2.7, 3.2.5, 3.2.4)
  sass-rails (3.2.6, 3.2.5)
  selenium-webdriver (2.31.0, 2.29.0, 2.27.2)
  sequel (3.44.0, 3.20.0)
  sexp_processor (4.1.5, 4.1.3, 3.2.0)
  simplecov (0.7.1)
  simplecov-html (0.7.1)
  sinatra (1.3.4, 1.0)
  sprockets (2.8.2, 2.2.2)
  sqlite3 (1.3.7, 1.3.6)
  taps (0.3.24)
  therubyracer (0.11.4, 0.11.3, 0.11.0)
  thinking-sphinx (3.0.1, 2.0.13)
  thor (0.17.0, 0.16.0)
  tilt (1.3.6, 1.3.5, 1.3.3)
  treetop (1.4.12)
  tzinfo (0.3.37, 0.3.36, 0.3.35)
  uglifier (1.3.0)
  warden (1.2.1)
  websocket (1.0.7, 1.0.6)
  xpath (1.0.0)

Commit: Working through TDD section

  dev01@dev01:~/dev/test2$ rails generate rspec:install
        create  .rspec
        create  spec
        create  spec/spec_helper.rb

  Add Database Cleaner for RSpec

  Add Factory Girl for Test Objects

  Add Devise Test Helpers

  Add Email Spec

  Add Configure the Rails Generator

  Run RSpec

Commit: Continued work through TDD section

  Add Cucumber for BDD

  Email Spec

  Run Single Features Easily

  Run Cucumber

Commit: Completed Layout and Stylesheets

  Configuration

    Configuration File

  Layout and Stylesheets

    Navigation Links for Devise (Haml)

    Flash Messages (Haml)

    CSS Styling with SASS

    Simple Default Application Layout (Haml)

Commit: Authentication section

  Authentication

    Setup Configuration for Devise

      dev01@dev01:~/dev/test2$ rails generate devise:install
            create  config/initializers/devise.rb
            create  config/locales/devise.en.yml
      ===============================================================================

      Some setup you must do manually if you haven't yet:

        1. Ensure you have defined default url options in your environments files. Here 
           is an example of default_url_options appropriate for a development environment 
           in config/environments/development.rb:

             config.action_mailer.default_url_options = { :host => 'localhost:3000' }

           In production, :host should be set to the actual host of your application.

        2. Ensure you have defined root_url to *something* in your config/routes.rb.
           For example:

             root :to => "home#index"

        3. Ensure you have flash messages in app/views/layouts/application.html.erb.
           For example:

             <p class="notice"><%= notice %></p>
             <p class="alert"><%= alert %></p>

        4. If you are deploying Rails 3.1+ on Heroku, you may want to set:

             config.assets.initialize_on_precompile = false

           On config/application.rb forcing your application to not access the DB
           or load models when precompiling your assets.

        5. You can copy Devise views (for customization) to your app by running:

             rails g devise:views

      ===============================================================================

    Generate a Model and Routes for Users

      dev01@dev01:~/dev/test2$ rails generate devise User
            invoke  active_record
            create    db/migrate/20130322002837_devise_create_users.rb
            create    app/models/user.rb
            invoke    rspec
          conflict      spec/models/user_spec.rb
          Overwrite /home/dev01/dev/test2/spec/models/user_spec.rb? (enter "h" for help) [Ynaqdh] n
              skip      spec/models/user_spec.rb
            invoke      factory_girl
          conflict        spec/factories/users.rb
            Overwrite /home/dev01/dev/test2/spec/factories/users.rb? (enter "h" for help) [Ynaqdh] n
              skip        spec/factories/users.rb
            insert    app/models/user.rb
             route  devise_for :users

      dev01@dev01:~/dev/test2$ rake routes
              new_user_session GET    /users/sign_in(.:format)       devise/sessions#new
                  user_session POST   /users/sign_in(.:format)       devise/sessions#create
          destroy_user_session DELETE /users/sign_out(.:format)      devise/sessions#destroy
                 user_password POST   /users/password(.:format)      devise/passwords#create
             new_user_password GET    /users/password/new(.:format)  devise/passwords#new
            edit_user_password GET    /users/password/edit(.:format) devise/passwords#edit
                               PUT    /users/password(.:format)      devise/passwords#update
      cancel_user_registration GET    /users/cancel(.:format)        devise/registrations#cancel
             user_registration POST   /users(.:format)               devise/registrations#create
         new_user_registration GET    /users/sign_up(.:format)       devise/registrations#new
        edit_user_registration GET    /users/edit(.:format)          devise/registrations#edit
                               PUT    /users(.:format)               devise/registrations#update
                               DELETE /users(.:format)               devise/registrations#destroy

      Accommodate Cucumber Testing for “Sign Out”

      Prevent Logging of Passwords

Commit: User Management

  (Skipped) Authorization (CanCan)

  User Management

    Add a migration

    Modify the User Model

    Create Custom Views for User Registration

Commit: Home Page, Initial Data

  dev01@dev01:~/dev/test2$ mv public/index.html public/index.html.original

  dev01@dev01:~/dev/test2$ rails generate controller home index --no-controller-specs --skip-stylesheets --skip-javascripts
        create  app/controllers/home_controller.rb
         route  get "home/index"
        invoke  erb
        create    app/views/home
        create    app/views/home/index.html.erb
        invoke  rspec
        invoke  assets
        invoke    coffee
        invoke    scss

  Add haml gem to Gemfile

Commit: User Profiles

Commit: Restrict Access

Commit: Heroku #1 through #5

  http://stormy-tor-7806.herokuapp.com

  Several iterations of troubleshooting database init and seeding.
  Worked on Commit #4; adding notes for #5

  bundle install --without production

  rake assets:precompile

  git push heroku master

  heroku logs

  heroku rake db:migrate

  heroku config (configure ENV)
    heroku config
    heroku config:add ADMIN_NAME="Alan Tripjay"
    heroku config:add ADMIN_EMAIL="alan.jjj@gmail.com"
    heroku config:add ADMIN_PASSWORD="********"
    heroku config:set ADMIN_PASSWORD="password"

  heroku rake db:seed

  heroku run rake db:reset

Commit: Exploring Devise #1

  Change or test user password (irb)
    User.find(1).reset_password! 'password', 'password'
    User.find(1).valid_password? 'password'

Commit: Exploring Devise #2: Override sessions and views
  http://presentations.royvandewater.com/?file=authentication-with-devise.html#7
    rails g devise:views
      dev01@dev01:~/dev/test2$ rails g devise:views
            invoke  Devise::Generators::SharedViewsGenerator
            create    app/views/devise/shared
            create    app/views/devise/shared/_links.erb
            invoke  form_for
            create    app/views/devise/confirmations
            create    app/views/devise/confirmations/new.html.erb
            create    app/views/devise/passwords
            create    app/views/devise/passwords/edit.html.erb
            create    app/views/devise/passwords/new.html.erb
             exist    app/views/devise/registrations
            create    app/views/devise/registrations/edit.html.erb
            create    app/views/devise/registrations/new.html.erb
            create    app/views/devise/sessions
            create    app/views/devise/sessions/new.html.erb
            create    app/views/devise/unlocks
            create    app/views/devise/unlocks/new.html.erb
            invoke  erb
            create    app/views/devise/mailer
            create    app/views/devise/mailer/confirmation_instructions.html.erb
            create    app/views/devise/mailer/reset_password_instructions.html.erb
            create    app/views/devise/mailer/unlock_instructions.html.erb

  http://presentations.royvandewater.com/?file=authentication-with-devise.html#8
    (override the session controller)

Commit: Generate a new models for this test application
  Using customers and orders based on RailsGuides Active Record Associations

  rails generate model Customer name:string
  rails generate model Order order_date:datetime

  # made backup of dev database
  ~/dev/test2_development.pgdb.2013.04.13.1.backup

Commit: db:migrate and basic controllers and templates
  rake db:migrate

  # observe
  rails dbconsole

  rails console
    irb(main):049:0> @cus5 = Customer.new :name => 'Customer 5'
    => #<Customer id: nil, name: "Customer 5", created_at: nil, updated_at: nil>
    irb(main):050:0> @cus5.save
       (0.4ms)  BEGIN
      SQL (3.7ms)  INSERT INTO "customers" ("created_at", "name", "updated_at") VALUES ($1, $2,     $3) RETURNING "id"  [["created_at", Sun, 14 Apr 2013 13:23:53 UTC +00:00], ["name",     "Customer 5"], ["updated_at", Sun, 14 Apr 2013 13:23:53 UTC +00:00]]
       (1.6ms)  COMMIT
    => true
    irb(main):051:0> Order
    => Order(id: integer, order_date: datetime, customer_id: integer, created_at: datetime,     updated_at: datetime)
    irb(main):053:0> @cus5.orders.build(:order_date => Time.now)
    => #<Order id: nil, order_date: "2013-04-14 13:24:41", customer_id: 4, created_at: nil,     updated_at: nil>
    irb(main):054:0> @cus5.save
       (0.3ms)  BEGIN
      SQL (2.6ms)  INSERT INTO "orders" ("created_at", "customer_id", "order_date", "updated_at")    VALUES ($1, $2, $3, $4) RETURNING "id"  [["created_at", Sun, 14 Apr 2013 13:24:46 UTC    +00:00], ["customer_id", 4], ["order_date", Sun, 14 Apr 2013 13:24:41 UTC +00:00], [   "updated_at", Sun, 14 Apr 2013 13:24:46 UTC +00:00]]
       (1.5ms)  COMMIT
    => true
    irb(main):055:0> 

  # Add basic interface for customers and orders

  1. Add resources :<model> to routes.rb
  2. Add controller
  3. Add template

Commit: PDF - prawn
  sudo gem install prawn

  # Testing in rails console
    # Assignment style
    pdf = Prawn::Document.new
      pdf.stroke_bounds
      pdf.stroke_circle [0,0], 10
    pdf.render_file "prawn.pdf"
  
    # Implicit block style
    Prawn::Document.generate("prawn.pdf") do
      stroke_bounds
      stroke_circle [0,0], 10
      bounding_box([100,300], :width => 300, :height => 200) do
        stroke_bounds
        stroke_circle [0,0], 10
      end
      text "Hello, test"
    end

Commit: Fix Heroku production- migrations and seeding

  Fix migrations
    dev01@dev01:~/dev/test2$ heroku pg:info
    === HEROKU_POSTGRESQL_BROWN_URL (DATABASE_URL)
    Plan:        Dev
    Status:      available
    Connections: 1
    PG Version:  9.2.4
    Created:     2013-03-29 19:38 UTC
    Data Size:   6.5 MB
    Tables:      2
    Rows:        4/10000 (In compliance)
    Fork/Follow: Unsupported

    heroku pg:psql
      d1c59i50se32tm=> \d
                         List of relations
       Schema |       Name        |   Type   |     Owner      
      --------+-------------------+----------+----------------
       public | schema_migrations | table    | jyfclayiuudbeg
       public | users             | table    | jyfclayiuudbeg
       public | users_id_seq      | sequence | jyfclayiuudbeg
      (3 rows)

    rails dbconsole
      test2_development=> \d
                     List of relations
       Schema |       Name        |   Type   | Owner 
      --------+-------------------+----------+-------
       public | customers         | table    | test2
       public | customers_id_seq  | sequence | test2
       public | orders            | table    | test2
       public | orders_id_seq     | sequence | test2
       public | schema_migrations | table    | test2
       public | users             | table    | test2
       public | users_id_seq      | sequence | test2
      (7 rows)

    heroku rake db:migrate  #-- use heroku run rake instead

  Add customer and order seeds and reset databases

    #-- see ./db/seeds.rb

    rake db:reset

    git push heroku master
    heroku run rake db:reset

Commit: More Prawn - customers and orders pdf
  http://blog.idyllic-software.com/blog/bid/204082/Creating-PDF-using-Prawn-in-Ruby-on-Rails

  #-- Added respond to block in ./app/controllers/customers_controller.rb

  #-- Troublshooting class path for ./app/pdfs/customersandorders_pdf.rb
  Rails.application.config
  Test2::Application.config.autoload_paths
  #-- ended up adding "  require 'customersandorders_pdf.rb'" to customers controller

Commit: Royalty migrations, part 1

  #-- backup database
  ~/dev/test2_development.pgdb.2013.04.27.1.backup

  #-- Models for Diagram1.dia (rename the diagram)
  # 
  rails generate model Artist name:string
  
  rails generate model Category name:string
  
  rails generate model Product title:text artist_id:integer category_id:integer upc:string spcn:string price:decimal media_type:string new_release:boolean key1:string key2:string key3:string rank:integer old_price:decimal new_price:decimal

  rails generate model PublishingHouse type:string name:string contact_name:string phone:string fax:string address:string address2:string city:string state:string zip:string

  rails generate model RoyaltyOwner publishing_house_id:integer type:string first_name:string last_name:string other_name:string phone:string fax:string address:string address2:string city:string state:string zip:string

  rails generate model RoyaltyownerProductMap royalty_owner_id:integer product_id:integer royalty_percentage:decimal royalty_type:string amount:decimal incomplete_ammount:decimal notes:text

    #-- Model output
    
          invoke  active_record
          create    db/migrate/20130427141029_create_artists.rb
          create    app/models/artist.rb
          invoke    rspec
          create      spec/models/artist_spec.rb
          invoke      factory_girl
          create        spec/factories/artists.rb
    
          invoke  active_record
          create    db/migrate/20130427141107_create_categories.rb
          create    app/models/category.rb
          invoke    rspec
          create      spec/models/category_spec.rb
          invoke      factory_girl
          create        spec/factories/categories.rb
    
          invoke  active_record
          create    db/migrate/20130427141131_create_products.rb
          create    app/models/product.rb
          invoke    rspec
          create      spec/models/product_spec.rb
          invoke      factory_girl
          create        spec/factories/products.rb
    
          invoke  active_record
          create    db/migrate/20130427141155_create_publishing_houses.rb
          create    app/models/publishing_house.rb
          invoke    rspec
          create      spec/models/publishing_house_spec.rb
          invoke      factory_girl
          create        spec/factories/publishing_houses.rb
    
          invoke  active_record
          create    db/migrate/20130427141212_create_royalty_owners.rb
          create    app/models/royalty_owner.rb
          invoke    rspec
          create      spec/models/royalty_owner_spec.rb
          invoke      factory_girl
          create        spec/factories/royalty_owners.rb
    
          invoke  active_record
          create    db/migrate/20130427141227_create_royaltyowner_product_maps.rb
          create    app/models/royaltyowner_product_map.rb
          invoke    rspec
          create      spec/models/royaltyowner_product_map_spec.rb
          invoke      factory_girl
          create        spec/factories/royaltyowner_product_maps.rb

  #-- Add has_many and belongs_to relationships in model files


  test2_development=> \d
                 List of relations
   Schema |       Name        |   Type   | Owner 
  --------+-------------------+----------+-------
   public | customers         | table    | test2
   public | customers_id_seq  | sequence | test2
   public | orders            | table    | test2
   public | orders_id_seq     | sequence | test2
   public | schema_migrations | table    | test2
   public | users             | table    | test2
   public | users_id_seq      | sequence | test2
  (7 rows)
  
  
  dev01@dev01:~/dev/test2$ rake db:migrate
  ==  CreateArtists: migrating ==================================================
  -- create_table(:artists)
  NOTICE:  CREATE TABLE will create implicit sequence "artists_id_seq" for serial column "artists.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "artists_pkey" for table "artists"
     -> 0.1555s
  ==  CreateArtists: migrated (0.1556s) =========================================
  
  ==  CreateCategories: migrating ===============================================
  -- create_table(:categories)
  NOTICE:  CREATE TABLE will create implicit sequence "categories_id_seq" for serial column "categories.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "categories_pkey" for table "categories"
     -> 0.0075s
  ==  CreateCategories: migrated (0.0080s) ======================================
  
  ==  CreateProducts: migrating =================================================
  -- create_table(:products)
  NOTICE:  CREATE TABLE will create implicit sequence "products_id_seq" for serial column "products.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "products_pkey" for table "products"
     -> 0.0072s
  ==  CreateProducts: migrated (0.0074s) ========================================
  
  ==  CreatePublishingHouses: migrating =========================================
  -- create_table(:publishing_houses)
  NOTICE:  CREATE TABLE will create implicit sequence "publishing_houses_id_seq" for serial column "publishing_houses.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "publishing_houses_pkey" for table "publishing_houses"
     -> 0.0165s
  ==  CreatePublishingHouses: migrated (0.0167s) ================================
  
  ==  CreateRoyaltyOwners: migrating ============================================
  -- create_table(:royalty_owners)
  NOTICE:  CREATE TABLE will create implicit sequence "royalty_owners_id_seq" for serial column "royalty_owners.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "royalty_owners_pkey" for table "royalty_owners"
     -> 0.0357s
  ==  CreateRoyaltyOwners: migrated (0.0359s) ===================================
  
  ==  CreateRoyaltyownerProductMaps: migrating ==================================
  -- create_table(:royaltyowner_product_maps)
  NOTICE:  CREATE TABLE will create implicit sequence "royaltyowner_product_maps_id_seq" for serial column "royaltyowner_product_maps.id"
  NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "royaltyowner_product_maps_pkey" for table "royaltyowner_product_maps"
     -> 0.0080s
  ==  CreateRoyaltyownerProductMaps: migrated (0.0098s) =========================
  
  
  test2_development=> \d
                        List of relations
   Schema |               Name               |   Type   | Owner 
  --------+----------------------------------+----------+-------
   public | artists                          | table    | test2
   public | artists_id_seq                   | sequence | test2
   public | categories                       | table    | test2
   public | categories_id_seq                | sequence | test2
   public | customers                        | table    | test2
   public | customers_id_seq                 | sequence | test2
   public | orders                           | table    | test2
   public | orders_id_seq                    | sequence | test2
   public | products                         | table    | test2
   public | products_id_seq                  | sequence | test2
   public | publishing_houses                | table    | test2
   public | publishing_houses_id_seq         | sequence | test2
   public | royalty_owners                   | table    | test2
   public | royalty_owners_id_seq            | sequence | test2
   public | royaltyowner_product_maps        | table    | test2
   public | royaltyowner_product_maps_id_seq | sequence | test2
   public | schema_migrations                | table    | test2
   public | users                            | table    | test2
   public | users_id_seq                     | sequence | test2
  (19 rows)

Commit: Correct reserved field name, type; complete seeding

  #-- Migrations to rename field "type" in PublishingHouse and RoyaltyOwner

  rails g migration change_fieldname_type_for_publishing_houses
  rails g migration change_fieldname_type_for_royalty_owners

  #-- Migrate output

    invoke  active_record
    create    db/migrate/20130427183427_change_fieldname_type_for_publishing_houses.rb

    invoke  active_record
    create    db/migrate/20130427183514_change_fieldname_type_for_royalty_owners.rb

    dev01@dev01:~/dev/test2$ rake db:migrate
    -- change_table(:publishing_houses)
       -> 0.0019s
    ==  ChangeFieldnameTypeForPublishingHouses: migrating =========================
    ==  ChangeFieldnameTypeForPublishingHouses: migrated (0.0000s) ================
    
    -- change_table(:royalty_owners)
       -> 0.0013s
    ==  ChangeFieldnameTypeForRoyaltyOwners: migrating ============================
    ==  ChangeFieldnameTypeForRoyaltyOwners: migrated (0.0000s) ===================

Commit: Corrected has_many and belongs_to modeling

Commit: Changeups on Devise

  #-- Add user.  What about prod?
  User.create :name => 'Diah Jantzen', :email => 'dejantzen@gmail.com', :password => 'password', :password_confirmation => 'password'

  Looks like 'heroku run rails console' should work


  #-- Remove sign_up from Devise Registerable module
  http://stackoverflow.com/questions/6734323/how-do-i-remove-the-devise-route-to-sign-up
  See ./config/routes.rb

  dev01@dev01:~/dev/test2$ rake routes
                    root        /                              home#index
        new_user_session GET    /users/sign_in(.:format)       sessions#new
            user_session POST   /users/sign_in(.:format)       sessions#create
    destroy_user_session DELETE /users/sign_out(.:format)      sessions#destroy
           user_password POST   /users/password(.:format)      devise/passwords#create
       new_user_password GET    /users/password/new(.:format)  devise/passwords#new
      edit_user_password GET    /users/password/edit(.:format) devise/passwords#edit
                         PUT    /users/password(.:format)      devise/passwords#update
  edit_user_registration GET    /users/edit(.:format)          devise/registrations#edit
       user_registration PUT    /users(.:format)               devise/registrations#update

Commit: Work on homepage controller/view

  RoyaltyOwner.order("updated_at DESC").limit(5)
  Product.order("updated_at DESC").limit(5)

Commit: Royalty Owner route and form work
  
  #-- Continue wiring remaining routes

        royalty_owners GET    /royalty_owners(.:format)          royalty_owners#index
                       POST   /royalty_owners(.:format)          royalty_owners#create
     new_royalty_owner GET    /royalty_owners/new(.:format)      royalty_owners#new
    edit_royalty_owner GET    /royalty_owners/:id/edit(.:format) royalty_owners#edit
         royalty_owner GET    /royalty_owners/:id(.:format)      royalty_owners#show
                       PUT    /royalty_owners/:id(.:format)      royalty_owners#update
                       DELETE /royalty_owners/:id(.:format)      royalty_owners#destroy


  #-- Add pagination
  sudo gem install will_paginate
  # add to Gemfile
  bundle install

  #-- Search forms
  Good progress on Royalty Owner form

Commit: Decent sort, search, per page options in for Royalty Owners

Commit: Relational sort working; RoyaltyOwner belongs to PublishingHouse
  - work on relational sort / search crieteria
  http://www.garbageburrito.com/blog/entry/447/rails-super-cool-simple-column-sorting

  http://stackoverflow.com/questions/8471751/how-to-order-by-a-related-model-in-default-scope-rails-3-1
  http://stackoverflow.com/questions/9197649/rails-sort-by-join-table-data

Commit: Completed routes for royalty_owners

        royalty_owners GET    /royalty_owners(.:format)          royalty_owners#index
                       POST   /royalty_owners(.:format)          royalty_owners#create
     new_royalty_owner GET    /royalty_owners/new(.:format)      royalty_owners#new
    edit_royalty_owner GET    /royalty_owners/:id/edit(.:format) royalty_owners#edit
         royalty_owner GET    /royalty_owners/:id(.:format)      royalty_owners#show
                       PUT    /royalty_owners/:id(.:format)      royalty_owners#update
                       DELETE /royalty_owners/:id(.:format)      royalty_owners#destroy

Next: Heroku

  git push heroku master
  heroku ps
  heroku logs
  heroku rake db:migrate
    WARNING: `heroku rake` has been deprecated. Please use `heroku run rake` instead.
  heroku run rake db:reset
  (not used) heroku rake db:seed
  (not used) heroku run rake db:push

  heroku pg:info
  heroku pg:psql
  heroku run rails console
